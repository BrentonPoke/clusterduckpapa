# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "heltec_wifi_lora_32_V2;nodemcu;" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)

# Convert "Home Directory" that may contain unescaped backslashes on Windows
file(TO_CMAKE_PATH $ENV{HOMEDRIVE}$ENV{HOMEPATH} ENV_HOME_PATH)


SET(CMAKE_C_COMPILER "${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-gcc.exe")
SET(CMAKE_CXX_COMPILER "${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-g++.exe")
SET(CMAKE_CXX_FLAGS "-fno-rtti -fno-exceptions -std=gnu++11 -Os -g3 -Wall -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -fexceptions -Werror=reorder")
SET(CMAKE_C_FLAGS "-std=gnu99 -Wno-old-style-declaration -Os -g3 -Wall -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -fexceptions -Werror=reorder")

SET(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_STANDARD 11)

if (CMAKE_BUILD_TYPE MATCHES "heltec_wifi_lora_32_V2")
    add_definitions(-DPLATFORMIO=60104)
    add_definitions(-DARDUINO_HELTEC_WIFI_LORA_32_V2)
    add_definitions(-DESP32)
    add_definitions(-DESP_PLATFORM)
    add_definitions(-DF_CPU=240000000L)
    add_definitions(-DHAVE_CONFIG_H)
    add_definitions(-DMBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\")
    add_definitions(-DARDUINO=10805)
    add_definitions(-DARDUINO_ARCH_ESP32)
    add_definitions(-DARDUINO_VARIANT=\"heltec_wifi_lora_32_V2\")
    add_definitions(-DARDUINO_BOARD=\"Heltec\ WiFi\ LoRa\ 32\ \(V2\)\")

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/ClusterDuck Protocol/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiClientSecure/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/DNSServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/CRC32/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/ESP Async WebServer/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/AsyncTCP/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/FS/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/AsyncTCP/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/U8g2/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/Crypto/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/Time")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/PubSubClient/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/ArduinoJson/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/arduino-timer/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/TinyGPSPlus/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/RadioLib/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/SPI/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/ArduinoOTA/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/ESPmDNS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/WiFi/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/Update/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/config")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_trace")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_update")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/asio")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bootloader_support")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bt")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/coap")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/console")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/driver")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/efuse")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-tls")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_adc_cal")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_event")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_client")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_server")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_https_ota")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_https_server")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_ringbuf")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_websocket_client")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/espcoredump")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ethernet")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/expat")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fatfs")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freemodbus")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freertos")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/heap")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/idf_test")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/jsmn")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/json")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/libsodium")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/log")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/lwip")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mbedtls")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mdns")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/micro-ecc")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mqtt")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/newlib")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nghttp")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nvs_flash")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/openssl")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protobuf-c")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protocomm")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/pthread")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/sdmmc")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/smartconfig_ack")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/soc")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spi_flash")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spiffs")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcp_transport")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcpip_adapter")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ulp")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/unity")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/vfs")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wear_levelling")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wifi_provisioning")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wpa_supplicant")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/xtensa-debug-module")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-face")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32-camera")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fb_gfx")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/cores/esp32")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/variants/heltec_wifi_lora_32_V2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/AXP202X_Library/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Adafruit_BMP085_Unified")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Adafruit_BMP280_Library")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Adafruit_Sensor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/ArduinoJson/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/ClusterDuck-Protocol/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Crypto")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/DHT-sensor-library")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/ESPAsyncWebServer/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/FastLED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/GP2YDustSensor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Heltec_ESP32_Dev-Boards/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/MQSensorsLib/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/RadioLib/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/TinyGPSPlus/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/U8g2_Arduino/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/arduino-timer/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/esp8266-oled-ssd1306/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/pubsubclient/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/CRC32/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/Crypto@0.2.0")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/RadioLib@3.5.0/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/arduino-timer@2.0.1/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/AsyncUDP/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/AzureIoT/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/BLE/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/BluetoothSerial/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/ESP32/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/FFat/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPClient/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPUpdate/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPUpdateServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/NetBIOS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/Preferences/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/SD/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/SD_MMC/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/SPIFFS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/SimpleBLE/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/Ticker/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/WebServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiProv/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include-fixed")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/*.*
    )
endif()

if (CMAKE_BUILD_TYPE MATCHES "nodemcu")
    add_definitions(-DPLATFORMIO=60104)
    add_definitions(-DESP8266)
    add_definitions(-DARDUINO_ARCH_ESP8266)
    add_definitions(-DARDUINO_ESP8266_NODEMCU)
    add_definitions(-DF_CPU=80000000L)
    add_definitions(-D__ets__)
    add_definitions(-DICACHE_FLASH)
    add_definitions(-DARDUINO=10805)
    add_definitions(-DARDUINO_BOARD=\"PLATFORMIO_NODEMCU\")
    add_definitions(-DFLASHMODE_QIO)
    add_definitions(-DLWIP_OPEN_SRC)
    add_definitions(-DNONOSDK22x_190703=1)
    add_definitions(-DTCP_MSS=536)
    add_definitions(-DLWIP_FEATURES=1)
    add_definitions(-DLWIP_IPV6=0)
    add_definitions(-DVTABLES_IN_FLASH)

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266WiFi/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/pubsubclient/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/ClusterDuck-Protocol/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/arduino-timer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/tools/sdk/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/tools/sdk/libc/xtensa-lx106-elf/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/cores/esp8266")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/tools/sdk/lwip2/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/variants/nodemcu")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/AXP202X_Library/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Adafruit_BMP085_Unified")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Adafruit_BMP280_Library")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Adafruit_Sensor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/ArduinoJson/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/AsyncTCP/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/CRC32/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Crypto")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/DHT-sensor-library")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/ESPAsyncWebServer/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/FastLED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/GP2YDustSensor")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/Heltec_ESP32_Dev-Boards/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/MQSensorsLib/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/RadioLib/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/TinyGPSPlus/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/U8g2_Arduino/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/lib/esp8266-oled-ssd1306/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ArduinoOTA")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/DNSServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/EEPROM")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266AVRISP/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266HTTPClient/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266HTTPUpdateServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266LLMNR")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266NetBIOS")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266SSDP")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266SdFat/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266WebServer/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266WiFiMesh/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266httpUpdate/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266mDNS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Ethernet/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/GDBStub/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Hash/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/LittleFS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/SD/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/SDFS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/SPI")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/SPISlave/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Servo/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/SoftwareSerial/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/TFT_Touch_Shield_V2")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Ticker/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/Wire")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduinoespressif8266/libraries/esp8266/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/4.8.2")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa/lib/gcc/xtensa-lx106-elf/4.8.2/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa/lib/gcc/xtensa-lx106-elf/4.8.2/include-fixed")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/nodemcu/*.*
    )
endif()

FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
    ${CMAKE_CURRENT_LIST_DIR}/test/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
